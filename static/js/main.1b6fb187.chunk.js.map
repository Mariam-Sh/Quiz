{"version":3,"sources":["App.js","components/End.js","components/Modal.js","components/Question.js","components/Start.js","reportWebVitals.js","index.js"],"names":["interval","End","results","data","onReset","onAnswersCheck","time","useState","correctAnswers","setCorrectAnswers","useEffect","correct","forEach","result","index","a","answer","className","length","Math","floor","onClick","Modal","onClose","map","i","q","Question","onAnswerUpdate","nuberOfQuestion","activeQuestion","onSetActiveQuestion","onSetStep","selected","setSelected","error","setError","radiosWrapper","useRef","findCheckeInput","current","querySelector","checked","changeHandler","e","target","value","question","ref","choices","choice","type","name","onChange","prevState","Start","onQuizStart","App","step","setStep","setActiveQuestion","answers","setAnswers","showModal","setShowModal","setTime","clearInterval","setInterval","prevTime","quizData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1b6fb187.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport End from './components/End';\nimport Modal from './components/Modal';\nimport Question from './components/Question';\nimport Start from './components/Start';\nimport quizData from './data/quiz.json';\n\n\nlet interval;\n\nconst App = ()=> {\n\n  const [step, setStep] = useState(1);\n  const [activeQuestion, setActiveQuestion] = useState(0);\n  const [answers, setAnswers] = useState([]);\n  const [showModal, setShowModal] = useState(false)\n  const [time, setTime] = useState(0);\n\n  useEffect(()=>{\n    if(step === 3) {\n      clearInterval(interval)\n    }\n\n  },[step])\n\n  const quizStartHandler = () => {\n    setStep(2);\n    interval = setInterval( () => {\n      setTime(prevTime => prevTime + 1);\n    },1000 );\n  }\n\n  const resetClickHandler = () => {\n    setActiveQuestion(0);\n    setAnswers([]);\n    setStep(2);\n    setTime(0);\n    interval = setInterval( () => {\n      setTime(prevTime => prevTime +1)\n    },1000 )\n  }\n\n\n\n  return (\n    <div className=\"App\">\n      { step === 1 &&  <Start onQuizStart={quizStartHandler} />}\n      { step === 2 && < Question \n        data = {quizData.data[activeQuestion]}\n        onAnswerUpdate = {setAnswers}\n        nuberOfQuestion={quizData.data.length}\n        activeQuestion = {activeQuestion}\n        onSetActiveQuestion={setActiveQuestion}\n        onSetStep={setStep}\n      />} \n      { step === 3 && <End \n        results = {answers}\n        data= {quizData.data}\n        onReset = {resetClickHandler}\n        onAnswersCheck={()=> setShowModal(true)}\n        time={time}\n      /> }\n\n      {showModal && <Modal\n       onClose = {()=> setShowModal(false)}\n       results={answers}\n       data={quizData.data}\n      />}\n    </div>\n  );\n}\n\nexport default App;\n","import React, { useEffect, useState } from 'react';\r\n\r\n\r\nconst End = ({results,data,onReset,onAnswersCheck, time}) => {\r\n\r\n  const [correctAnswers,setCorrectAnswers ] = useState(0);\r\n\r\n  useEffect(()=>{\r\n    let correct = 0;\r\n\r\n    results.forEach( (result,index) => {\r\n      if(result.a === data[index].answer){\r\n      correct++;\r\n      }\r\n      \r\n    });  \r\n    setCorrectAnswers(correct)\r\n  },[]);\r\n\r\n  return(\r\n    <div className=\"card\">\r\n      <div className=\"card-content\">\r\n        <div className=\"content\">\r\n          <h3>Your results</h3> \r\n          <p>{correctAnswers} of {data.length}</p>\r\n          <p><strong>{Math.floor((correctAnswers / data.length) *100)}%</strong></p>\r\n          <p><strong>Your Time</strong> {time} s</p>\r\n          <button className=\"button is-info mr-2\" onClick={onAnswersCheck}>Check your answers</button>\r\n          <button className=\"button is-success mr-2\" onClick={onReset}>try again</button>\r\n\r\n        </div>\r\n      </div> \r\n\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default End;","import React from 'react';\r\n\r\nconst Modal = ({onClose,results,data})=> {\r\n  return(\r\n    <div className=\"modal is-active\">\r\n      <div className=\"modal-background\" onClick={onClose}></div>\r\n      <div className=\"modal-card\">\r\n        <header className=\"modal-card-head\">\r\n          <p className=\"modal-card-title\">Your Answer</p>\r\n          <button className=\"delete\" onClick={onClose}></button>\r\n        </header>\r\n          <section className=\"modal-card-body content\">\r\n            <ul>\r\n              {results.map((result,i)=> (\r\n                <li key={i} className=\"mb-5\">\r\n                  <p><strong>{result.q}</strong></p>\r\n                  <p className={result.a === data[i].answer ? 'has-background-success has-text-white p:2' : 'has-background-danger has-text-white p:2'}> Your Answer : {result.a} </p>\r\n                  {result.a !== data[i].answer && <p className=\"has-background-link hast-text-white p-2\">Correct Answer : {data [i].answer} </p>}\r\n                </li>\r\n              ))}\r\n           \r\n            </ul>\r\n          </section>\r\n        </div>\r\n      </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Modal;","import React, { UseEffect,useState, useRef, useEffect} from 'react';\r\n\r\nconst Question =  ( {data, onAnswerUpdate,nuberOfQuestion,activeQuestion, onSetActiveQuestion,onSetStep }) => {\r\n\r\n const [selected, setSelected] = useState(\"\");\r\n const [error, setError] = useState(\"\");\r\n const radiosWrapper = useRef();\r\n \r\n useEffect( () => {\r\n   const findCheckeInput = radiosWrapper.current.querySelector('input:checked');\r\n   if(findCheckeInput) {\r\n     findCheckeInput.checked = false;\r\n   }\r\n }, [data] );\r\n\r\n const changeHandler = (e) => {\r\n   setSelected(e.target.value);\r\n   if(error) {\r\n     setError('');\r\n   }\r\n }\r\n\r\n  const nextClickHandler = (e) =>  {\r\n    if(selected === '' ){\r\n        return setError(\"please select one option\");\r\n    }\r\n\r\n    onAnswerUpdate(prevState => [... prevState, {q: data.question, a: selected}]);\r\n    setSelected('');\r\n    if(activeQuestion < nuberOfQuestion  - 1) {\r\n      onSetActiveQuestion(activeQuestion + 1);\r\n    } else {\r\n      onSetStep(3);\r\n    }\r\n  }\r\n  return(\r\n    <div className=\"card\">\r\n      <div className=\"card-content\">\r\n        <div className=\"content\">\r\n          <h2 className=\"mb-5\">{data.question}</h2>\r\n          <div className=\"control\" ref={radiosWrapper}>\r\n            { data.choices.map((choice, i)=> (\r\n              <label className=\"radio has-background-light\" key={i}> \r\n              <input  type=\"radio\" name=\"answer\" value={choice} onChange={changeHandler} />\r\n              {choice}\r\n            </label>\r\n  ))}\r\n          </div>\r\n          { error && <div className=\"has-text-danger\">{error}</div> }\r\n             <button className=\"button is-link is-medium is-fullwidth mt-4\" onClick={nextClickHandler} >Next</button>\r\n      \r\n\r\n        </div>\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  )\r\n }\r\n\r\n\r\nexport default Question;","import React from 'react';\r\n\r\nconst Start = ({onQuizStart}) => {\r\n  return(\r\n    <div className=\"card\">\r\n      <div className=\"card-content\">\r\n        <div className=\"content\">\r\n          <h1>Start the Quiz</h1>\r\n          <p>Good luck</p>\r\n          <button className=\"button is-info is-light\" onClick={onQuizStart}>Start</button>\r\n        </div>\r\n\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Start;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bulma/css/bulma.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}